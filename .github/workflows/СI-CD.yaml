name: CI/CD for Nest + Redis on Kind

on:
  push:
    branches: ["main", "dev"]
  pull_request:
    branches: ["main", "dev"]

env:
  IMAGE_NAME: nest-redis-demo
  NAMESPACE: app-dev

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # ------------------
      # 1. Checkout repository
      # ------------------
      - name: Checkout repository
        uses: actions/checkout@v3

      # ------------------
      # 2. Set up Docker Buildx
      # ------------------
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # ------------------
      # 3. Build Docker image
      # ------------------
      - name: Build Docker image
        run: |
          docker build -t $IMAGE_NAME:latest .

      # ------------------
      # 4. Install kind
      # ------------------
      - name: Install kind
        run: |
          curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.26.0/kind-linux-amd64
          chmod +x ./kind
          sudo mv ./kind /usr/local/bin/kind

      # ------------------
      # 5. Create Kind cluster
      # ------------------
      - name: Create Kind cluster
        run: |
          kind create cluster --name demo
          kubectl cluster-info

      # ------------------
      # 6. Load Docker image into Kind
      # ------------------
      - name: Load Docker image into Kind
        run: |
          kind load docker-image $IMAGE_NAME:latest --name demo

      # ------------------
      # 7. Apply Kubernetes manifests in correct order
      # ------------------
      - name: Apply Kubernetes manifests
        run: |
          # 1. Namespace
          kubectl apply -f k8s/namespace.yaml

          # 2. Secrets and ConfigMaps
          kubectl apply -f k8s/secret-redis.yaml
          kubectl apply -f k8s/configmap-app.yaml

          # 3. Deployments
          kubectl apply -f k8s/deployment-redis.yaml
          kubectl apply -f k8s/deployment-app.yaml

          # 4. Services
          kubectl apply -f k8s/service-redis.yaml
          kubectl apply -f k8s/service-app.yaml

          # 5. Ingress / NetworkPolicy / HPA
          kubectl apply -f k8s/ingress.yaml
          kubectl apply -f k8s/networkpolicy.yaml
          kubectl apply -f k8s/hpa.yaml

      # ------------------
      # 8. Verify Deployment rollout
      # ------------------
      - name: Verify Deployment rollout
        run: |
          kubectl rollout status deployment/$IMAGE_NAME -n $NAMESPACE
          kubectl get pods -n $NAMESPACE -o wide

      # ------------------
      # 9. Show logs from NestJS pod
      # ------------------
      - name: Show NestJS logs
        run: |
          POD_NAME=$(kubectl get pods -n $NAMESPACE -l app=$IMAGE_NAME -o jsonpath="{.items[0].metadata.name}")
          echo "NestJS Pod: $POD_NAME"
          kubectl logs -n $NAMESPACE $POD_NAME

      # ------------------
      # 10. Cleanup kind cluster
      # ------------------
      - name: Delete Kind cluster
        if: always()
        run: |
          kind delete cluster --name demo
